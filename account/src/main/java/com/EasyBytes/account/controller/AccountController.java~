package com.EasyBytes.account.controller;

import com.EasyBytes.account.constant.AccountsConstants;
import com.EasyBytes.account.dto.CustomerDTO;
import com.EasyBytes.account.dto.ResponseDTO;
import com.EasyBytes.account.entities.Customer;
import com.EasyBytes.account.repository.CustomerRepository;
import com.EasyBytes.account.service.IAccountService;
import lombok.AllArgsConstructor;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.Optional;

@RestController
@AllArgsConstructor
@RequestMapping(path = "/api", produces = {MediaType.APPLICATION_JSON_VALUE})
class AccountController {

    private IAccountService iAccountService;

    @PostMapping(path = "/create")
    public ResponseEntity<ResponseDTO> createAccount(@RequestBody CustomerDTO customerDTO) {
        iAccountService.CreateAccount(customerDTO);
        return ResponseEntity
                .status(HttpStatus.CREATED)
                .body(new ResponseDTO(AccountsConstants.STATUS_201, AccountsConstants.MESSAGE_201));
    }

    @GetMapping(path = "/fetch")
    public ResponseEntity<CustomerDTO> getAccount(@RequestParam String mobileNumber) {
        CustomerDTO customerDto= iAccountService.fetchAccount(mobileNumber);
        System.out.println(customerDto);
        return ResponseEntity
                .status(HttpStatus.OK)
                .body(new CustomerDTO());
    }
}